run-name: GCP - Dev
name: GCP - Dev

on:
  workflow_dispatch:
    inputs:
      config:
        type: choice
        description: Choose which pool to build
        options:
        - ubuntu2204-amd64-alpha

permissions:
  id-token: write
  contents: read

jobs:
  job1:
    name: "Get Project ID from Config"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        shell: pwsh
        run: |
          Import-Module ${{ github.workspace }}\bin\WorkerImages\WorkerImages.psm1
          Set-GCPWorkerImageProject -Key '${{ github.event.inputs.config }}'
    outputs:
      PROJECT: ${{ steps.set-matrix.outputs.PROJECT }}
  job2:
    needs: job1
    name: "GCP ${{ github.event.inputs.config }}"
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          project_id: ${{ needs.job1.outputs.PROJECT }}
          workload_identity_provider: "projects/324168772199/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "deploy-prod@fxci-production-level1-workers.iam.gserviceaccount.com"
      - name: 'Run Packer'
        shell: pwsh
        run: |
          Import-Module ${{ github.workspace }}\bin\WorkerImages\WorkerImages.psm1
          $Vars = @{
            Key = '${{ github.event.inputs.config }}'
            Account_File = '${{ steps.auth.outputs.credentials_file_path }}'
            Worker_Env_Var_Key = "${{ secrets.WORKER_ENV_VAR_KEY }}"
            TC_worker_cert = "${{ secrets.TC_WORKER_CERT }}"
            TC_worker_key = "${{ secrets.TC_WORKER_KEY }}"
          }
          New-GCPWorkerImage @Vars