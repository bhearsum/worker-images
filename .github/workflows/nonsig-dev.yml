run-name: ${{ github.event.inputs.config }} - Dev
name: FXCI - Dev

on:
  workflow_dispatch:
    inputs:
      config:
        type: choice
        description: Choose which pool to build
        options:
        - win10-64-2009-alpha
        - win10-64-2009
        - win11-64-2009-alpha
        - win11-64-2009

jobs:
  job1:
    name: "Create Image Tasks"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        shell: pwsh
        run: |
          Import-Module .\bin\WorkerImages\WorkerImages.psm1
          Set-AzWorkerImageLocation -Key '${{ github.event.inputs.config }}'
    outputs:
      LOCATIONS: ${{ steps.set-matrix.outputs.LOCATIONS }}
  job2:
    needs: job1
    name: "${{ github.event.inputs.config }} - ${{ matrix.LOCATIONS }}"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        locations: ${{fromJson(needs.job1.outputs.LOCATIONS)}}
    steps:
      - uses: actions/checkout@v4
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID_DEV }}","clientSecret":"${{ secrets.AZURE_CLIENT_ID_DEV_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID_DEV }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: true
      - name: "Remove current images"
        uses: azure/powershell@v2
        with:
          inlinescript: |
            Import-Module .\bin\WorkerImages\WorkerImages.psm1
            Remove-AzWorkerImage -Key "${{ github.event.inputs.config }}" -Location "${{ matrix.LOCATIONS }}"
          azPSVersion: "latest"
      - name: 'Run Packer'
        shell: pwsh
        run: |
          Import-Module .\bin\WorkerImages\WorkerImages.psm1
          $Vars = @{
            Location = "${{ matrix.LOCATIONS }}"
            Key = '${{ github.event.inputs.config }}'
            Client_ID = "${{ secrets.AZURE_CLIENT_ID_DEV }}"
            Client_Secret = "${{ secrets.AZURE_CLIENT_ID_DEV_SECRET }}"
            Subscription_ID = "${{ secrets.AZURE_SUBSCRIPTION_ID_DEV }}"
            Tenant_ID = "${{ secrets.AZURE_TENANT_ID }}"
            Application_ID = "${{ secrets.AZURE_APPLICATION_ID_DEV }}"
          }
          New-AzWorkerImage @Vars
      - name: "Download Release Notes to Github"
        uses: azure/powershell@v2
        with:
          inlinescript: |
              $Config = "${{ github.event.inputs.config }}"
              ## Download the release notes
              $ENV:AZCOPY_AUTO_LOGIN_TYPE = "SPN"
              $ENV:AZCOPY_SPA_APPLICATION_ID = "${{ secrets.AZURE_APPLICATION_ID_DEV }}"
              $ENV:AZCOPY_SPA_CLIENT_SECRET = "${{ secrets.AZURE_CLIENT_ID_DEV_SECRET }}"
              $ENV:AZCOPY_TENANT_ID = "${{ secrets.AZURE_TENANT_ID }}"
              Write-host "Downloading Release Notes for $($config).md"
              azcopy copy "https://roninpuppetassets.blob.core.windows.net/packer/$($config).md" "$($config).md"
          azPSVersion: "latest"
      - uses: actions/checkout@v4
      - name: Upload to Github Repository
        shell: pwsh
        run: |
          $Config = "${{ github.event.inputs.config }}"
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          mv "$($config).md" "./docs/$($config).md"
          git add "./docs/$($config).md"
          git commit -m "Updating Release Notes for $($config).md"
          git remote set-url origin https://<username>:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin main